name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    
jobs:
    unit-testing:
        name: Unit Testing
        strategy:
            matrix:
                node-version: [18,19,20]
                operating-system: [ubuntu-latest, windows-latest]
                exclude:
                    - node-version: 18
                      operating-system: macos-latest
        runs-on: ${{ matrix.operating-system }}
        steps:
        - name: Checkout the Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version- ${{ matrix.node-version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          id: node-test
          run: npm test
          
        - name: Archive Test Result
          # if: steps.node-test.outcome == 'failure'
          if:  always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        needs: unit-testing
        steps:
        - name: Checkout the Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version-18
          uses: actions/setup-node@v3
          with:
            node-version: 18

        - name: Install Dependencies
          run: npm install

        - name: Code Coverage
          continue-on-error: true
          run: npm run coverage
          
        - name: Archive Code Coverage
          uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage-Report
            path: coverage/

    docker:
      name: Containerization
      needs: [unit-testing, code-coverage]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout the Repository
          uses: actions/checkout@v4

        - name: Docker login
          uses: docker/login-action@v2.2.0
          with:
            username: ${{ vars.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Docker Build For Testing
          uses: docker/build-push-action@v4
          with:
            context: .
            push: false
            tags: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }} 

        - name: Docker Image Testing
          run: |
            docker images
            docker run --name solar-system-app -d  \
                -p 3000:3000 \
                -e MONGO_URI=$MONGO_URI \
                -e MONGO_USERNAME=$MONGO_USERNAME \
                -e MONGO_PASSWORD=$MONGO_PASSWORD \
                ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
            
            export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
            echo $IP
            
            echo Testing Image URL using wget 
            wget -q -O - 127.0.0.1:3000/live | grep live  


        - name: Docker Push To Docker Hub
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }} 
            